plugins {
    id 'fabric-loom' version '0.12-SNAPSHOT'
}

apply from: '../gradle/property_helper.gradle'

archivesBaseName = "Common"


dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings "net.fabricmc:yarn:${yarn_mappings}:v2"

    //Don't actually use fabric classes, they're there to compile
    modCompileOnly "net.fabricmc:fabric-loader:${fabric_loader_version}"
    modImplementation "net.flytre.flytre_lib:flytre_lib-${minecraft_version}-common:${lib_version}"

    //TEMP
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"
}

processResources {

    def buildProps = project.properties.clone()

    filesMatching(['pack.mcmeta']) {

        expand buildProps
    }
}

// -- MAVEN PUBLISHING --
project.publishing {

    publications {

        mavenJava(MavenPublication) {

            artifactId project.archivesBaseName

            // Base mod archive.
            artifact jar

            // Adds the sources as an artifact.
            artifact project.sourcesJar {
                classifier 'sources'
            }

            // Adds the javadocs as an artifact.
            artifact project.javadocJar {
                classifier 'javadoc'
            }
        }
    }

    repositories {

        maven {

            // Sets maven credentials if they are provided. This is generally
            // only used for external/remote uploads.
            if (project.hasProperty('mavenUsername') && project.hasProperty('mavenPassword')) {

                credentials {

                    username findProperty('mavenUsername')
                    password findProperty('mavenPassword')
                }
            }

            url getDefaultString('mavenURL', 'undefined', true)
        }
    }
}